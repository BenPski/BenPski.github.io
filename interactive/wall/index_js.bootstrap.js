"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["index_js"],{

/***/ "../pkg/wall.js":
/*!**********************!*\
  !*** ../pkg/wall.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Function: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.Function),\n/* harmony export */   Wall: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.Wall),\n/* harmony export */   __wbg_BigInt_32d50b32fc9c8c1b: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_BigInt_32d50b32fc9c8c1b),\n/* harmony export */   __wbg_alert_13cd4569612aae94: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_alert_13cd4569612aae94),\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbindgen_add: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add),\n/* harmony export */   __wbindgen_div: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_div),\n/* harmony export */   __wbindgen_jsval_eq: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_jsval_eq),\n/* harmony export */   __wbindgen_mul: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_mul),\n/* harmony export */   __wbindgen_neg: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_neg),\n/* harmony export */   __wbindgen_number_new: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_number_new),\n/* harmony export */   __wbindgen_object_clone_ref: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_object_clone_ref),\n/* harmony export */   __wbindgen_object_drop_ref: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_object_drop_ref),\n/* harmony export */   __wbindgen_sub: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_sub),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw),\n/* harmony export */   greet: () => (/* reexport safe */ _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.greet)\n/* harmony export */ });\n/* harmony import */ var _wall_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wall_bg.wasm */ \"../pkg/wall_bg.wasm\");\n/* harmony import */ var _wall_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wall_bg.js */ \"../pkg/wall_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wall_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_wall_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n(0,_wall_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_wall_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/../pkg/wall.js?");

/***/ }),

/***/ "../pkg/wall_bg.js":
/*!*************************!*\
  !*** ../pkg/wall_bg.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Function: () => (/* binding */ Function),\n/* harmony export */   Wall: () => (/* binding */ Wall),\n/* harmony export */   __wbg_BigInt_32d50b32fc9c8c1b: () => (/* binding */ __wbg_BigInt_32d50b32fc9c8c1b),\n/* harmony export */   __wbg_alert_13cd4569612aae94: () => (/* binding */ __wbg_alert_13cd4569612aae94),\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbindgen_add: () => (/* binding */ __wbindgen_add),\n/* harmony export */   __wbindgen_div: () => (/* binding */ __wbindgen_div),\n/* harmony export */   __wbindgen_jsval_eq: () => (/* binding */ __wbindgen_jsval_eq),\n/* harmony export */   __wbindgen_mul: () => (/* binding */ __wbindgen_mul),\n/* harmony export */   __wbindgen_neg: () => (/* binding */ __wbindgen_neg),\n/* harmony export */   __wbindgen_number_new: () => (/* binding */ __wbindgen_number_new),\n/* harmony export */   __wbindgen_object_clone_ref: () => (/* binding */ __wbindgen_object_clone_ref),\n/* harmony export */   __wbindgen_object_drop_ref: () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   __wbindgen_sub: () => (/* binding */ __wbindgen_sub),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw),\n/* harmony export */   greet: () => (/* binding */ greet)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} s\n*/\nfunction greet(s) {\n    const ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\n/**\n*/\nconst Function = Object.freeze({ Square:0,\"0\":\"Square\",DeBruijn:1,\"1\":\"DeBruijn\",Rueppel:2,\"2\":\"Rueppel\",Rook:3,\"3\":\"Rook\",Knight:4,\"4\":\"Knight\", });\n/**\n*/\nclass Wall {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Wall.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wall_free(ptr);\n    }\n    /**\n    * @param {Function} _function\n    * @returns {Wall}\n    */\n    static new(_function) {\n        const ret = wasm.wall_new(_function);\n        return Wall.__wrap(ret);\n    }\n    /**\n    * @param {number} m\n    * @param {number} n\n    * @returns {bigint}\n    */\n    get(m, n) {\n        const ret = wasm.wall_get(this.__wbg_ptr, m, n);\n        return takeObject(ret);\n    }\n}\n\nfunction __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbindgen_add(arg0, arg1) {\n    const ret = getObject(arg0) + getObject(arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_div(arg0, arg1) {\n    const ret = getObject(arg0) / getObject(arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_mul(arg0, arg1) {\n    const ret = getObject(arg0) * getObject(arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_neg(arg0) {\n    const ret = -getObject(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_sub(arg0, arg1) {\n    const ret = getObject(arg0) - getObject(arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_jsval_eq(arg0, arg1) {\n    const ret = getObject(arg0) === getObject(arg1);\n    return ret;\n};\n\nfunction __wbg_alert_13cd4569612aae94(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbg_BigInt_32d50b32fc9c8c1b(arg0) {\n    const ret = BigInt(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://create-wasm-app/../pkg/wall_bg.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wall */ \"../pkg/wall.js\");\n/* harmony import */ var interactive_canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! interactive_canvas */ \"./node_modules/interactive_canvas/interactive_canvas.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([wall__WEBPACK_IMPORTED_MODULE_0__]);\nwall__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nlet wall = wall__WEBPACK_IMPORTED_MODULE_0__.Wall.new(wall__WEBPACK_IMPORTED_MODULE_0__.Function.Rueppel);\n\nlet modulus = 2n;\n\nlet colorTable = [\n    \"#FFFFFF\",\n    \"#000000\",\n]\n\n// canvas setup\nconst canvas = document.getElementById(\"canvas\");\ncanvas.height = 500;\ncanvas.width = 500;\ncanvas.style.outlineColor = \"black\";\ncanvas.style.outlineWidth = \"3px\";\ncanvas.style.outlineStyle = \"solid\";\nconst GRID_SIZE = 20;\nlet GRID_LINES = false;\n\n// selector setup\nconst func_select = document.getElementById(\"sequence\");\nconst functions = {\n    \"square\": wall__WEBPACK_IMPORTED_MODULE_0__.Function.Square,\n    \"debruijn\": wall__WEBPACK_IMPORTED_MODULE_0__.Function.DeBruijn,\n    \"rueppel\": wall__WEBPACK_IMPORTED_MODULE_0__.Function.Rueppel,\n    \"rook\": wall__WEBPACK_IMPORTED_MODULE_0__.Function.Rook,\n    \"knight\": wall__WEBPACK_IMPORTED_MODULE_0__.Function.Knight,\n};\nfunc_select.addEventListener(\"change\", (event) => {\n    let val = event.target.value;\n    wall = wall__WEBPACK_IMPORTED_MODULE_0__.Wall.new(functions[val]);\n});\n\nfor (let name in functions) {\n    let option = document.createElement(\"option\");\n    option.innerText = name;\n    option.value = name;\n    if (name == 'rueppel') {\n        option.selected = true;\n    }\n    func_select.appendChild(option);\n}\n\n// color picker setup\nfunction create_color_row(index, default_color) {\n    let row = document.createElement('tr');\n    let cell = document.createElement('td');\n    let pick = document.createElement('input');\n    pick.type = \"color\";\n    pick.value = default_color;\n    pick.onchange = (event) => {\n        colorTable[index] = event.target.value;\n    }\n    cell.appendChild(pick);\n    row.appendChild(cell);\n    color_table.appendChild(row);\n}\nconst color_table = document.getElementById(\"colorpicker\");\nconst add_color = document.getElementById(\"add_color\");\nconst remove_color = document.getElementById(\"remove_color\");\n// add 0 selection\ncreate_color_row(0, \"#FFFFFF\");\n// add 1 selection\ncreate_color_row(1, \"#000000\");\n\nadd_color.addEventListener(\"click\", (event) => {\n    let color = \"#000000\";\n    colorTable.push(color);\n    create_color_row(colorTable.length - 1, color);\n    modulus += 1n;\n});\n\nremove_color.addEventListener(\"click\", (event) => {\n    if (colorTable.length > 2) {\n        colorTable.pop();\n        modulus -= 1n;\n        color_table.removeChild(color_table.lastChild);\n    }\n});\n\nfunction mod(x, y) {\n    return ((x % y) + y) % y;\n}\n\nfunction draw(ctx) {\n    // draw grid between p1 and p2\n    // grid should line up at 0,0\n    // render just off screen, so round down on p1 and round up on p2\n\n    let p1 = ctx.transformedPoint(0,0);\n    let p2 = ctx.transformedPoint(canvas.width,canvas.height);\n    let start_row = Math.ceil(p1.x/GRID_SIZE) - 1;\n    let end_row = Math.ceil(p2.x/GRID_SIZE) + 1;\n    let start_col = Math.ceil(p1.y/GRID_SIZE) - 1;\n    let end_col = Math.ceil(p2.y/GRID_SIZE) + 1;\n\n    let low_x = start_row*GRID_SIZE;\n    let low_y = start_col*GRID_SIZE;\n    let high_x = end_row*GRID_SIZE;\n    let high_y = end_col*GRID_SIZE;\n\n    if (GRID_LINES) {\n        for (let x=low_x; x<=high_x; x += GRID_SIZE) {\n            ctx.beginPath();\n            ctx.moveTo(x, low_y);\n            ctx.lineTo(x, high_y);\n            ctx.stroke();\n        }\n\n        for (let y=low_y; y<=high_y; y += GRID_SIZE) {\n            ctx.beginPath();\n            ctx.moveTo(low_x, y);\n            ctx.lineTo(high_x, y);\n            ctx.stroke();\n        }\n    }\n    for (let row=start_row; row<=end_row; row++) {\n        for (let col=start_col; col<=end_col; col++) {\n            const item = mod(wall.get(col, row), modulus);\n            let color = colorTable[item];\n            if (color != \"white\") {\n                ctx.beginPath();\n                ctx.fillStyle = color;\n                ctx.rect(row*GRID_SIZE, col*GRID_SIZE, GRID_SIZE, GRID_SIZE);\n                ctx.fill();\n            }\n        }\n    }\n\n}\n\nlet IC = new interactive_canvas__WEBPACK_IMPORTED_MODULE_1__.InteractiveCanvas(canvas, draw);\n\nIC.ctx.translate(0,2*GRID_SIZE);\nIC.start();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/./index.js?");

/***/ }),

/***/ "./node_modules/interactive_canvas/interactive_canvas.js":
/*!***************************************************************!*\
  !*** ./node_modules/interactive_canvas/interactive_canvas.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractiveCanvas: () => (/* binding */ InteractiveCanvas)\n/* harmony export */ });\n// largely yoinked from http://phrogz.net/tmp/canvas_zoom_to_cursor.html\nclass InteractiveCanvas {\n    constructor(canvas, draw) {\n        this.canvas = canvas;\n        let ctx = canvas.getContext('2d');\n        this.draw = draw;\n        this.ctx = this.trackTransforms(ctx);\n        this.redraw();\n        this.lastX=this.canvas.width/2;\n        this.lastY=this.canvas.height/2;\n        this.dragStart=null;\n        this.scaleStart=null;\n        this.touches=[];\n        this.scaleFactor = 1.1;\n        this.animationId = null;\n        // I don't understand why bind is necessary, but 'this' isn't properly\n        // captured otherwise in the listener methods\n        this.mouseDownListener = this.handleMouseDown.bind(this);\n        this.mouseMoveListener = this.handleMouseMove.bind(this);\n        this.mouseUpListener = this.handleMouseUp.bind(this);\n        this.scrollListener = this.handleScroll.bind(this);\n        this.touchStartListener = this.handleTouchStart.bind(this);\n        this.touchMoveListener = this.handleTouchMove.bind(this);\n        this.touchEndListener = this.handleTouchEnd.bind(this);\n\n    }\n\n    setup_listeners() {\n        this.canvas.addEventListener('mousedown',this.mouseDownListener, false);\n        this.canvas.addEventListener('mousemove',this.mouseMoveListener, false);\n        this.canvas.addEventListener('mouseup',this.mouseUpListener,false);\n        this.canvas.addEventListener('DOMMouseScroll',this.scrollListener,false);\n        this.canvas.addEventListener('mousewheel',this.scrollListener,false);\n        this.canvas.addEventListener('touchstart',this.touchStartListener,false);\n        this.canvas.addEventListener('touchmove',this.touchMoveListener,false);\n        this.canvas.addEventListener('touchend',this.touchEndListener,false);\n        this.canvas.addEventListener('touchcancel',this.touchEndListener,false);\n    }\n\n    remove_listeners() {\n        this.canvas.removeEventListener('mousedown',this.mouseDownListener, false);\n        this.canvas.removeEventListener('mousemove',this.mouseMoveListener, false);\n        this.canvas.removeEventListener('mouseup',this.mouseUpListener,false);\n        this.canvas.removeEventListener('DOMMouseScroll',this.scrollListener,false);\n        this.canvas.removeEventListener('mousewheel',this.scrollListener,false);\n        this.canvas.addEventListener('touchstart',this.touchStartListener,false);\n        this.canvas.addEventListener('touchmove',this.touchMoveListener,false);\n        this.canvas.addEventListener('touchend',this.touchEndListener,false);\n        this.canvas.addEventListener('touchcancel',this.touchEndListener,false);\n    }\n\n    clear() {\n        // Clear the entire canvas\n        let p1 = this.ctx.transformedPoint(0,0);\n        let p2 = this.ctx.transformedPoint(this.canvas.width,this.canvas.height);\n        this.ctx.clearRect(p1.x,p1.y,p2.x-p1.x,p2.y-p1.y);\n    }\n\n    redraw() {\n        this.clear();\n        this.draw(this.ctx);\n    }\n\n    zoom(clicks){\n        let pt = this.ctx.transformedPoint(this.lastX,this.lastY);\n        this.ctx.translate(pt.x,pt.y);\n        let factor = Math.pow(this.scaleFactor,clicks);\n        this.ctx.scale(factor,factor);\n        this.ctx.translate(-pt.x,-pt.y);\n        this.redraw();\n    }\n\n    handleMouseDown(evt) {\n        this.lastX = evt.offsetX || (evt.pageX - this.canvas.offsetLeft);\n        this.lastY = evt.offsetY || (evt.pageY - this.canvas.offsetTop);\n        this.dragStart = this.ctx.transformedPoint(this.lastX,this.lastY);\n    }\n\n    handleMouseMove(evt) {\n        this.lastX = evt.offsetX || (evt.pageX - this.canvas.offsetLeft);\n        this.lastY = evt.offsetY || (evt.pageY - this.canvas.offsetTop);\n        if (this.dragStart){\n            let pt = this.ctx.transformedPoint(this.lastX,this.lastY);\n            this.ctx.translate(pt.x-this.dragStart.x,pt.y-this.dragStart.y);\n            this.redraw();\n        }\n    }\n\n    handleMouseUp(evt) {\n        this.dragStart = null;\n    }\n\n    handleScroll(evt) {\n        let delta = evt.wheelDelta ? evt.wheelDelta/40 : evt.detail ? -evt.detail : 0;\n        if (delta) this.zoom(delta);\n        return evt.preventDefault() && false;\n    };\n\n    handleTouchStart(evt) {\n        evt.preventDefault();\n        const touches = evt.changedTouches;\n        for (let i=0; i<touches.length; i++) {\n            this.touches.push(touches[i]);\n        }\n        let points = [];\n        for (let i=0; i<this.touches.length; i++) {\n            points.push(this.ctx.transformedPoint(this.touches[i].pageX, this.touches[i].pageY));\n        }\n        let center = centroid(points);\n        this.lastX = center.x;\n        this.lastY = center.y;\n        this.dragStart = {x:this.lastX, y:this.lastY};\n        this.scaleStart = averageDistance(points, center);\n    }\n\n    handleTouchMove(evt) {\n        evt.preventDefault();\n        const touches = evt.changedTouches;\n        let points = [];\n        for (let i=0; i<touches.length; i++) {\n            let idx = this.getTouchIndex(touches[i]);\n            if (idx >= 0) {\n                let touch_curr = touches[i];\n                points.push(this.ctx.transformedPoint(touch_curr.pageX, touch_curr.pageY));\n            } else {\n                console.log(\"A touch seems to have appeared without a start event\", touches[i]); \n            }\n        }\n        let center = centroid(points);\n        this.lastX = center.x;\n        this.lastY = center.y;\n        if (this.dragStart) {\n            let pt = {x: this.lastX, y: this.lastY};\n            this.ctx.translate(pt.x-this.dragStart.x,pt.y-this.dragStart.y);\n        }\n\n        if (points.length > 1) {\n            let scale_new = averageDistance(points, center);\n            let scale = scale_new/this.scaleStart;\n            this.ctx.scale(scale, scale);\n        }\n    }\n\n    handleTouchEnd(evt) {\n        evt.preventDefault();\n        const touches = evt.changedTouches;\n        for (let i=0; i<touches.length; i++) {\n            let idx = this.getTouchIndex(touches[i]);\n            if (idx >= 0) {\n                this.touches.splice(idx, 1);\n            } else {\n                console.log(\"A touch seems to have appeared without a start event\", touches[i]); \n            }\n        }\n        if (this.touches.length == 0) {\n            this.dragStart = null;\n            this.scaleStart = null;\n        } else {\n            let points = [];\n            for (let i=0; i<this.touches.length; i++) {\n                points.push(this.ctx.transformedPoint(this.touches[i].pageX, this.touches[i].pageY));\n            }\n            let center = centroid(points);\n            this.lastX = center.x;\n            this.lastY = center.y;\n            this.dragStart = {x:this.lastX, y:this.lastY};\n            this.scaleStart = averageDistance(points, center);\n        }\n    }\n\n    getTouchIndex(touch) {\n        for (let j=0; j<this.touches.length; j++) {\n            if (this.touches[j].identifier == touch.identifier) {\n                return j;\n            }\n        }\n        return -1;\n    }\n\n    // Adds ctx.getTransform() - returns a DOMMatrix\n    // Adds ctx.transformedPoint(x,y) - returns an DOMPoint\n    trackTransforms(ctx){\n        let xform = new DOMMatrix();\n        ctx.getTransform = function(){ return xform; };\n        \n        let savedTransforms = [];\n        let save = ctx.save;\n        ctx.save = function(){\n            savedTransforms.push(xform.translate(0,0));\n            return save.call(ctx);\n        };\n        let restore = ctx.restore;\n        ctx.restore = function(){\n            xform = savedTransforms.pop();\n            return restore.call(ctx);\n        };\n\n        let scale = ctx.scale;\n        ctx.scale = function(sx,sy){\n            xform = xform.scale(sx,sy);\n            return scale.call(ctx,sx,sy);\n        };\n        let rotate = ctx.rotate;\n        ctx.rotate = function(radians){\n            xform = xform.rotate(radians*180/Math.PI);\n            return rotate.call(ctx,radians);\n        };\n        let translate = ctx.translate;\n        ctx.translate = function(dx,dy){\n            xform = xform.translate(dx,dy);\n            return translate.call(ctx,dx,dy);\n        };\n        let transform = ctx.transform;\n        ctx.transform = function(a,b,c,d,e,f){\n            let m2 = new DOMMatrix(); //svg.createSVGMatrix();\n            m2.a=a; m2.b=b; m2.c=c; m2.d=d; m2.e=e; m2.f=f;\n            xform = xform.multiply(m2);\n            return transform.call(ctx,a,b,c,d,e,f);\n        };\n        let setTransform = ctx.setTransform;\n        ctx.setTransform = function(a,b,c,d,e,f){\n            xform.a = a;\n            xform.b = b;\n            xform.c = c;\n            xform.d = d;\n            xform.e = e;\n            xform.f = f;\n            return setTransform.call(ctx,a,b,c,d,e,f);\n        };\n        let pt  = new DOMPoint();\n        ctx.transformedPoint = function(x,y){\n            pt.x=x; pt.y=y;\n            return pt.matrixTransform(xform.inverse());\n        }\n        return ctx;\n    }\n\n    renderLoop() {\n        this.redraw();\n        this.animationId = requestAnimationFrame((x) => this.renderLoop(x));\n    }\n\n    start() {\n        if (this.animationId === null) {\n            this.setup_listeners();\n            this.renderLoop();\n        }\n    }\n\n    stop() {\n        if (this.animationId !== null) {\n            cancelAnimationFrame(this.animationId);\n            this.remove_listeners();\n            this.animationId = null;\n        }\n    }\n}\n\nfunction centroid(points) {\n    let x = 0;\n    let y = 0;\n    for (let i=0; i<points.length; i++) {\n        x += points[i].x;\n        y += points[i].y;\n    }\n    return {x: x/points.length, y: y/points.length};\n}\n\nfunction averageDistance(points, center) {\n    let dist = 0;\n    for (let i=0; i<points.length; i++) {\n        dist += Math.sqrt((points[i].x-center.x)**2 + (points[i].y-center.y)**2);\n    }\n    return dist/points.length;\n}\n\n\n//# sourceURL=webpack://create-wasm-app/./node_modules/interactive_canvas/interactive_canvas.js?");

/***/ }),

/***/ "../pkg/wall_bg.wasm":
/*!***************************!*\
  !*** ../pkg/wall_bg.wasm ***!
  \***************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./wall_bg.js */ \"../pkg/wall_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"d3ab910e8a063971421a\", {\n\t\"./wall_bg.js\": {\n\t\t\"__wbindgen_number_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_number_new,\n\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\"__wbindgen_add\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_add,\n\t\t\"__wbindgen_div\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_div,\n\t\t\"__wbindgen_mul\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_mul,\n\t\t\"__wbindgen_neg\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_neg,\n\t\t\"__wbindgen_sub\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_sub,\n\t\t\"__wbindgen_object_clone_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_clone_ref,\n\t\t\"__wbindgen_jsval_eq\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_jsval_eq,\n\t\t\"__wbg_alert_13cd4569612aae94\": WEBPACK_IMPORTED_MODULE_0.__wbg_alert_13cd4569612aae94,\n\t\t\"__wbg_BigInt_32d50b32fc9c8c1b\": WEBPACK_IMPORTED_MODULE_0.__wbg_BigInt_32d50b32fc9c8c1b,\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw\n\t}\n});\n\n//# sourceURL=webpack://create-wasm-app/../pkg/wall_bg.wasm?");

/***/ })

}]);